(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&l(s)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function l(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();function i(){document.querySelector(".footer__title").innerHTML="Copyright Â© "+new Date().getFullYear()+" Spoiled Unknown.<br />All rights reserved."}function c(){const r=document.querySelector(".header__bars"),o=document.querySelector(".mobile-nav"),n=document.querySelectorAll(".mobile-nav__link");let l=!1;r.addEventListener("click",()=>{l=!l,l?(o.style.display="flex",document.body.style.overflowY="hidden",o.offsetWidth,o.style.opacity="1"):o.style.opacity="0"}),o.addEventListener("transitionend",()=>{l||(o.style.display="none",document.body.style.overflowY="auto")}),n.forEach(e=>{e.addEventListener("click",()=>{l=!1,o.style.opacity="0"})})}function d(){const r=document.querySelectorAll("#theme-toggle"),o=document.querySelector(".header__sun"),n=document.querySelector(".header__moon");localStorage.getItem("theme")!=null&&(document.body.classList.toggle("light-mode"),o.style.display="none",n.style.display="block");const e=()=>{document.body.classList.toggle("light-mode"),document.body.classList.contains("light-mode")?(o.style.display="none",n.style.display="block",localStorage.setItem("theme","light-mode")):(o.style.display="block",n.style.display="none",localStorage.removeItem("theme"),document.body.removeAttribute("class"))};r.forEach(t=>{t.addEventListener("click",e)})}function a(){const r=document.querySelectorAll(".lazy"),o=new IntersectionObserver((n,l)=>{n.forEach(e=>{if(e.isIntersecting){let t=e.target;t.src=t.dataset.src,t.classList.remove("loading"),t.classList.add("loaded"),l.unobserve(t)}})});r.forEach(n=>{o.observe(n)})}i();c();d();a();
